{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.scss","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","content","userPhoto","item","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","ProfileStatus","props","_useState2","useState","editMode","setEditMode","_useState4","status","setStatus","useEffect","react_default","a","createElement","onDoubleClick","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","NONE","ProfileInfo","profile","className","s","src","photos","small","alt","name","Profileinfo_ProfileStatus","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Post","message","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","postsElement","postData","map","posts","MyPosts_Post_Post","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","Profile","Profileinfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getUserStatus","components_Profile_Profile","Object","assign","React","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.047549d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2nbvK\",\"userPhoto\":\"ProfileInfo_userPhoto__1-enM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3SRy2\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}>\r\n                        {props.status || \"What's on your mind?\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nimport s from './ProfileInfo.module.scss';\r\n\r\n\r\nlet NONE = 'NONE';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return (<Preloader />)\r\n  }\r\n  return (\r\n    <div className={s.content}>\r\n      <div>\r\n        <img src={props.profile.photos.small} alt=\"AVATAR\" className={s.userPhoto}/>\r\n        {props.name}\r\n        <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\r\n        <p>Contacts:</p>\r\n        <ul>\r\n          <li>facebook:  {props.profile.contacts.facebook != null ? props.profile.contacts.facebook : NONE}</li>\r\n          <li>website:  {props.profile.contacts.website != null ? props.profile.contacts.website : NONE}</li>\r\n          <li>vk:  {props.profile.contacts.vk != null ? props.profile.contacts.vk : NONE}</li>\r\n          <li>twitter:  {props.profile.contacts.twitter != null ? props.profile.contacts.twitter : NONE}</li>\r\n          <li>instagram:  {props.profile.contacts.instagram != null ? props.profile.contacts.instagram : NONE}</li>\r\n          <li>yuotube:  {props.profile.contacts.youtube != null ? props.profile.contacts.youtube : NONE}</li>\r\n          <li>github:  {props.profile.contacts.github != null ? props.profile.contacts.github : NONE}</li>\r\n          <li>mainLink: {props.profile.contacts.mainLink != null ? props.profile.contacts.mainLink : NONE}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElement = props.postData.map(posts => <Post message={posts.message} />);\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  return (\r\n    <div>\r\n      My posts\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter U post\"\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Share</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nexport default MyPosts;","import { addPost } from '../../../state/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPost(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from './Profileinfo/Profileinfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../state/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}