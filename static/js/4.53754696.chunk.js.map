{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","content","dialogs","dialogsItems","active","messages","DialogItem","props","react_default","a","createElement","className","s","dialog","react_router_dom","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogPage","dialogsElements","dialogsData","map","Dialogs_DialogItem_DialogItem","key","messagesElements","messagesData","Dialogs_Message_Message","dialogItem","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,2HCWHC,EARI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAER,QAC/BI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,QCKzCC,EARC,SAACX,GACb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASN,EAAMY,6CCwBvCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAdL,SAAChB,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMe,SAAUlB,EAAMmB,cAClBlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,kBAC9DC,SAAU,CAACC,IAAUZ,MAEzBZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCASDuB,EAzCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,WAEdC,EAAkBF,EAAMG,YAAYC,IAAI,SAAAzB,GAAM,OAAIL,EAAAC,EAAAC,cAAC6B,EAAD,CAAYtB,KAAMJ,EAAOI,KAAMuB,IAAK3B,EAAOG,GAAIA,GAAIH,EAAOG,OAC5GyB,EAAmBP,EAAMQ,aAAaJ,IAAI,SAAAnB,GAAO,OAAIX,EAAAC,EAAAC,cAACiC,EAAD,CAASxB,QAASA,EAAQA,QAASqB,IAAKrB,EAAQH,OAKzG,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,SACdM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEgC,YACbR,GAEL5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEP,UACdG,EAAAC,EAAAC,cAAA,WAAM+B,IAEVjC,EAAAC,EAAAC,cAACY,EAAD,CAAqBG,SAXT,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOE,4CCGlBC,sBACXC,YAdkB,SAACf,GACnB,MAAO,CACHC,WAAYD,EAAMC,aAGD,SAACe,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,QAOpCK,IAFWJ,CAGbf","file":"static/js/4.53754696.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3q2Sf\",\"dialogs\":\"Dialogs_dialogs__3vwLm\",\"dialogsItems\":\"Dialogs_dialogsItems__2bm94\",\"active\":\"Dialogs_active__2yFZS\",\"messages\":\"Dialogs_messages__OdoEx\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder='Enter U message' \r\n                validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button >Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import { sendMessageCreator } from '../../state/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n"],"sourceRoot":""}